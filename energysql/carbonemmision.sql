
-- Create the table with an id column using UUID
CREATE TABLE carbon_emmision (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4 (),
    Country VARCHAR(50),
    CO2_kg_per_kWh DECIMAL(5, 3)
);

-- Insert the data (id will be auto-generated by uuid_generate_v4())
INSERT INTO
    carbon_emmision (Country, CO2_kg_per_kWh)
VALUES ('Sweden', 0.013),
    ('Lithuania', 0.018),
    ('France', 0.059),
    ('Austria', 0.085),
    ('Latvia', 0.105),
    ('Finland', 0.113),
    ('Slovakia', 0.132),
    ('Denmark', 0.166),
    ('Belgium', 0.170),
    ('Croatia', 0.210),
    ('Luxembourg', 0.219),
    ('Slovenia', 0.254),
    ('Italy', 0.256),
    ('Hungary', 0.260),
    ('Spain', 0.265),
    ('UnitedKingdom', 0.281),
    (
        'EuropeanUnion(currentcomposition)',
        0.296
    ),
    ('Romania', 0.306),
    ('Portugal', 0.325),
    ('Ireland', 0.425),
    ('Germany', 0.441),
    ('Bulgaria', 0.470),
    ('Netherlands', 0.505),
    ('Czechia', 0.513),
    ('Greece', 0.623),
    ('Malta', 0.648),
    ('Cyprus', 0.677),
    ('Poland', 0.773),
    ('Estonia', 0.819);


    select * from public.carbon_emmision


    -- calculate carbon emmision perday
    select * from data_payloads

-- current and prev month
    select EXTRACT( MONTH FROM current_timestamp - INTERVAL '1 month') AS prev_month,
    EXTRACT( MONTH FROM current_timestamp ) AS current_month

-- get power consumtion data by day and month
    select 
    EXTRACT( DAY FROM timestamp ) AS day,
    EXTRACT( MONTH FROM timestamp ) AS month,
    power_consumption
    from data_payloads


--
select power_consumption,EXTRACT( MONTH FROM timestamp ) as month  from data_payloads
where EXTRACT( MONTH FROM timestamp ) = EXTRACT( MONTH from current_timestamp ) or
EXTRACT( MONTH FROM timestamp) = EXTRACT( MONTH from current_timestamp - INTERVAL '1 month')

-- power each meter of buldings , taken daily for a month and previous month
-- then daily sum (each meter of each buldings) times Co2PerKwh


-- missing daily
 -- current month daily
 with meter_lists as (
    select meter_token 
    from meters
    join meter_pairs on meter_pairs.meter_id = meters.id
    join buildings on buildings.id = meter_pairs.building_id
    where buildings.id = 'ad91d7df-15f2-4b38-7a33-1fbbce2fa482'
 )
 select today, COALESCE(daily_power_consumption_this_month, 0), COALESCE(daily_power_consumption_prev_month, 0)
 from
    (SELECT distinct EXTRACT( DAY FROM today ) as today FROM generate_series(
            date_trunc('DAY', TO_TIMESTAMP('2024-08-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS')),
            date_trunc('DAY', TO_TIMESTAMP('2024-09-30 23:59:59', 'YYYY-MM-DD HH24:MI:SS')),
            INTERVAL '1 DAY'
    ) AS TODAY order by today asc)s1
 left join
 (select EXTRACT( DAY FROM timestamp ) as today,
 sum(power_consumption) as daily_power_consumption_this_month
 from data_payloads
 where timestamp between to_timestamp('2024-09-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS')
    and to_timestamp( '2024-09-30 00:00:00', 'YYYY-MM-DD HH24:MI:SS') and meter_token in (select meter_token from meter_lists)
group by today
order by today)Q1 using(today)
 -- prev month daily
 left join 
(select EXTRACT( DAY FROM timestamp ) as today,
 sum(power_consumption) as daily_power_consumption_prev_month
 from data_payloads
 where timestamp between to_timestamp('2024-08-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS')
    and to_timestamp( '2024-08-30 00:00:00', 'YYYY-MM-DD HH24:MI:SS') and meter_token in ( select meter_token from meter_lists )
group by today
order by today)Q2 using(today)