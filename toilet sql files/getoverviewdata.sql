-- Active: 1721143226972@@127.0.0.1@5432@smarttoilet
-- get list of devices in this identifier
SELECT DEVICES.DEVICE_NAME,DEVICES.DEVICE_ID,DEVICES.DEVICE_TOKEN,  
		TOILET_INFOS.TOILET_NAME AS Identifier ,DEVICE_TYPES.DEVICE_TYPE_NAME as  Namespace  
FROM DEVICE_PAIRS  
JOIN DEVICES ON DEVICES.DEVICE_ID = DEVICE_PAIRS.DEVICE_ID  
JOIN DEVICE_TYPES ON DEVICE_TYPES.DEVICE_TYPE_ID = DEVICES.DEVICE_TYPE_ID  
JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID  
WHERE DEVICE_PAIRS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984'

-- ADDITIONAL DATA FOR NEW FP
SELECT COUNT(CASE WHEN ur.reaction = '1' THEN 1 END) AS happy,  
COUNT(CASE WHEN ur.reaction = '2' THEN 1 END) AS satisfied,  
COUNT(CASE WHEN ur.reaction = '3' THEN 1 END) AS not_satisfied,  
COUNT(CASE WHEN ur.reaction = '4' THEN 1 END) AS not_happy,  
COUNT(CASE WHEN ur.complaint = '1' THEN 1 END) AS smelly_toilet, 
COUNT(CASE WHEN ur.complaint = '2' THEN 1 END) AS out_of_supplies,  
COUNT(CASE WHEN ur.complaint = '3' THEN 1 END) AS wet_floor,  
COUNT(CASE WHEN ur.complaint = '4' THEN 1 END) AS plumbing_issues  
FROM  
user_reactions ur  
LEFT JOIN  
reactions r ON r.react_id = ur.reaction  
LEFT JOIN  
complaints c ON c.complaint_id = ur.complaint  
WHERE ur.toilet_id = '5654c008-dbcc-4656-5601-0a0c50652213'  
AND (TIMESTAMP) >= TO_TIMESTAMP('  2024-07-01   16:00:00','YYYY-MM-DD HH24:MI:SS')

-- temporary fix mbk cleaner issue from male toiles 
SELECT LOCATION_ID FROM TOILET_INFOS
WHERE TOILET_INFO_ID ='0a38e4d1-f9b9-4cb2-648f-20e0ac269984'

-- get overview card data
WITH DEVICE_LIST AS ( 
    SELECT DEVICES.DEVICE_NAME,DEVICES.DEVICE_ID,DEVICES.DEVICE_TOKEN, 
    TOILET_INFOS.TOILET_NAME AS IDENTIFIER,TOILET_INFOS.TOILET_INFO_ID AS IDENTIFIER_ID, 
    DEVICE_TYPES.DEVICE_TYPE_NAME AS NAMESPACE,DEVICE_TYPES.DEVICE_TYPE_ID AS NAMESPACE_ID,  
    TOILET_TYPES.TOILET_TYPE_ID  
    FROM DEVICE_PAIRS  
    JOIN DEVICES ON DEVICES.DEVICE_ID = DEVICE_PAIRS.DEVICE_ID  
    JOIN DEVICE_TYPES ON DEVICE_TYPES.DEVICE_TYPE_ID = DEVICES.DEVICE_TYPE_ID  
    JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID  
    JOIN TOILET_TYPES ON TOILET_TYPES.TOILET_TYPE_ID = TOILET_INFOS.TOILET_TYPE_ID  
    WHERE DEVICE_PAIRS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984') 
    SELECT LAST_UPDATE,LAST_CLEAN_TIMESTAMP,LAST_AUTOCLEAN_ACTIVE_TIMESTAMP,AVG_CLEANER_RESPONSE_TIME, 
    COALESCE(TTLTRAFFIC ,'0') AS TOTAL_COUNTER,COALESCE(TOTAL_COUNTER_LAST_CLEAN ,'0') AS TOTAL_COUNTER_LAST_CLEAN,TOTAL_AUTOCLEAN_CNT,  
    -- COALESCE(HOURS::text, '0') AS HOURS,  
    IAQ,TMP,LUX , 
    BIN_FULL,BUSUK,URINAL_CLOG,SANITARY_BIN_FULL,PIPE_LEAK,  
    PIPE_LEAK,SLIPPERY,OUT_TISSUE,REFRESH_TOILET,OUT_SOAP,CLOGGED_TOILET  
    FROM  
    (SELECT SUM(people_in) AS TTLTRAFFIC  
    FROM COUNTER_DATA  
    JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = COUNTER_DATA.DEVICE_TOKEN  
    -- WHERE DEVICE_LIST.NAMESPACE_ID = 2 AND DATE(TIMESTAMP) = DATE(NOW())) Q1  
    WHERE DEVICE_LIST.NAMESPACE_ID = 2 AND (TIMESTAMP) >= TO_TIMESTAMP('  2024-07-01   16:00:00','YYYY-MM-DD HH24:MI:SS')) Q1  
    CROSS JOIN  
    (SELECT TIMESTAMP AS LAST_UPDATE,LUX,TEMPERATURE AS TMP,IAQ  
    FROM ENVIROMENT_DATA  
    JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = ENVIROMENT_DATA.DEVICE_TOKEN  
    WHERE DEVICE_LIST.NAMESPACE_ID = 3  
    ORDER BY TIMESTAMP DESC LIMIT 1) Q2  
    CROSS JOIN  
    (SELECT CHECK_OUT_TS as LAST_CLEAN_TIMESTAMP  
    FROM CLEANER_REPORTS  
    WHERE cleaner_reports.TOILET_TYPE_ID = (SELECT TOILET_TYPE_ID FROM TOILET_INFOS WHERE TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984' ) order by CHECK_OUT_TS desc limit 1) Q3  
    CROSS JOIN  
    (SELECT AVG(DURATION) AS AVG_CLEANER_RESPONSE_TIME  
    FROM CLEANER_REPORTS  
    WHERE cleaner_reports.TOILET_TYPE_ID = (SELECT TOILET_TYPE_ID FROM TOILET_INFOS WHERE TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984')) Q4  
    -- CROSS JOIN  
    -- (SELECT(SELECT ROUND((EXTRACT(EPOCH FROM NOW() - CHECK_OUT_TS::TIMESTAMP) / 3600)::decimal,0) AS HOURS  
    -- FROM cleaner_reports  
    -- WHERE cleaner_reports.TOILET_TYPE_ID = (SELECT TOILET_TYPE_ID FROM TOILET_INFOS WHERE TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984' order by CHECK_OUT_TS desc limit 1 ) ) AS HOURS) Q3  
    CROSS JOIN  
    (SELECT COUNT(CASE WHEN BUTTON_ID = 1 THEN 1 END) AS REFRESH_TOILET,  
    COUNT(CASE WHEN BUTTON_ID = 2 THEN 1 END) AS OUT_TISSUE,  
    COUNT(CASE WHEN BUTTON_ID = 3 THEN 1 END) AS BIN_FULL,  
    COUNT(CASE WHEN BUTTON_ID = 4 THEN 1 END) AS OUT_SOAP,  
    COUNT(CASE WHEN BUTTON_ID = 5 THEN 1  END) AS BUSUK,  
    COUNT(CASE WHEN BUTTON_ID = 6 THEN 1 END) AS CLOGGED_TOILET,  
    COUNT(CASE WHEN BUTTON_ID = 7 THEN 1 END) AS URINAL_CLOG,  
    COUNT(CASE WHEN BUTTON_ID = 8 THEN 1 END) AS SLIPPERY,  
    COUNT(CASE WHEN BUTTON_ID = 9 THEN 1 END) AS SANITARY_BIN_FULL,  
    COUNT(CASE WHEN BUTTON_ID = 10 THEN 1 END) AS PIPE_LEAK  
    FROM FEEDBACK_PANEL_DATA  
    -- JOIN DEVICES ON DEVICES.DEVICE_TOKEN = FEEDBACK_PANEL_DATA.DEVICE_TOKEN  
    -- JOIN DEVICE_PAIRS ON DEVICE_PAIRS.DEVICE_ID = DEVICES.DEVICE_ID  
    -- JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID  
    WHERE (TIMESTAMP) >= TO_TIMESTAMP('  2024-07-01   16:00:00','YYYY-MM-DD HH24:MI:SS') AND   
    FEEDBACK_PANEL_DATA.TOILET_TYPE_ID = (SELECT TOILET_TYPE_ID FROM TOILET_INFOS  
    WHERE TOILET_INFOS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984')  
    AND DEVICE_TOKEN = (SELECT DEVICE_TOKEN FROM DEVICE_LIST WHERE DEVICE_LIST.NAMESPACE_ID = 7)) Q5  
    CROSS JOIN  
    (SELECT COUNT(CASE WHEN AUTO_CLEAN_STATE = '1' THEN 1 END) AS TOTAL_AUTOCLEAN_CNT  
    FROM CLEANER_REPORTS  
    WHERE CLEANER_REPORTS.TOILET_TYPE_ID = (SELECT TOILET_TYPE_ID FROM TOILET_INFOS  
    WHERE TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984') AND CLEANER_REPORTS.CREATED_AT >= TO_TIMESTAMP('  2024-07-01   16:00:00','YYYY-MM-DD HH24:MI:SS')) Q6  
    CROSS JOIN  
    (SELECT SUM(PEOPLE_IN) AS TOTAL_COUNTER_LAST_CLEAN  
    FROM COUNTER_DATA  
    JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = COUNTER_DATA.DEVICE_TOKEN  
    WHERE DEVICE_LIST.NAMESPACE_ID = 2  
    AND (TIMESTAMP) >= (SELECT CHECK_OUT_TS FROM CLEANER_REPORTS  
    WHERE CLEANER_REPORTS.TOILET_TYPE_ID = (SELECT TOILET_TYPE_ID FROM TOILET_INFOS WHERE TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984' ) order by CHECK_OUT_TS desc limit 1)) Q7  
    CROSS JOIN  
    (SELECT CHECK_OUT_TS as LAST_AUTOCLEAN_ACTIVE_TIMESTAMP  
    FROM CLEANER_REPORTS  
    WHERE cleaner_reports.TOILET_TYPE_ID = (SELECT TOILET_TYPE_ID FROM TOILET_INFOS WHERE TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984' )  
    AND AUTO_CLEAN_STATE = '1'  
    order by CHECK_OUT_TS desc limit 1) Q8 

-- time stamp interval / timestamp gen query
SELECT uplinkTS  
FROM generate_series(date_trunc('HOUR', TO_TIMESTAMP('  2024-06-01   16:00:00', 'YYYY-MM-DD HH24:MI:SS')),
-- date_trunc('HOUR', TO_TIMESTAMP('  endDate   16:00:00', 'YYYY-MM-DD HH24:MI:SS')  interval '23' HOUR)  
date_trunc('HOUR', TO_TIMESTAMP('  2024-06-10   15:00:00', 'YYYY-MM-DD HH24:MI:SS')),
interval '1' HOUR) uplinkTS

-- get cleaner graph
WITH GENTIME AS (
    SELECT uplinkTS  
    FROM generate_series(date_trunc('HOUR', TO_TIMESTAMP('  2024-06-01   16:00:00', 'YYYY-MM-DD HH24:MI:SS')),
    -- date_trunc('HOUR', TO_TIMESTAMP('  endDate   16:00:00', 'YYYY-MM-DD HH24:MI:SS')  interval '23' HOUR)  
    date_trunc('HOUR', TO_TIMESTAMP('  2024-06-10   15:00:00', 'YYYY-MM-DD HH24:MI:SS')),
    interval '1' HOUR) uplinkTS)
SELECT uplinkTS::text, 
    COALESCE(TOTAL_MALE,0) AS TOTAL_MALE,  
    COALESCE(TOTAL_FEMALE,0) AS TOTAL_FEMALE  
    FROM GENTIME  
LEFT JOIN  
(SELECT date_trunc('HOUR', CHECK_IN_TS) AS uplinkTS,  
    COUNT(CASE WHEN CLEANER_REPORTS.TOILET_TYPE_ID = 1 THEN 1 END) TOTAL_MALE,  
    COUNT(CASE WHEN CLEANER_REPORTS.TOILET_TYPE_ID = 2 THEN 1 END) TOTAL_FEMALE  
    FROM CLEANER_REPORTS  
    WHERE CLEANER_REPORTS.LOCATION_ID = (  
SELECT location_id from toilet_infos where toilet_info_id = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984')  
    GROUP BY uplinkTS) second_query USING (uplinkTS)


-- time stamp interval / timestamp gen query
SELECT uplinkTS  
FROM generate_series(date_trunc('HOUR', TO_TIMESTAMP('  2024-06-01   16:00:00', 'YYYY-MM-DD HH24:MI:SS')),
-- date_trunc('HOUR', TO_TIMESTAMP('  endDate   16:00:00', 'YYYY-MM-DD HH24:MI:SS')  interval '23' HOUR)  
date_trunc('HOUR', TO_TIMESTAMP('  2024-06-10   15:00:00', 'YYYY-MM-DD HH24:MI:SS')),
interval '1' HOUR) uplinkTS
-- cleaning performance
SELECT uplinkTS::text, 
    COALESCE(TOTAL_TIME_MALE,0) AS TOTAL_TIME_MALE,  
    COALESCE(TOTAL_TIME_FEMALE,0) AS TOTAL_TIME_FEMALE,  
    COALESCE(TOTAL_TIME,0) AS TOTAL_TIME  
    FROM GENTIME  
    LEFT JOIN  
    (SELECT date_trunc('HOUR', CHECK_IN_TS) AS uplinkTS,  
    AVG(CASE WHEN CLEANER_REPORTS.TOILET_TYPE_ID = 1 THEN duration END) TOTAL_TIME_MALE,  
    AVG(CASE WHEN CLEANER_REPORTS.TOILET_TYPE_ID = 2 THEN duration END) TOTAL_TIME_FEMALE,  
    AVG(DURATION) TOTAL_TIME  
    FROM CLEANER_REPORTS  
    WHERE CLEANER_REPORTS.LOCATION_ID = (  
    SELECT location_id from toilet_infos where toilet_info_id = ?)  
    GROUP BY uplinkTS) second_query USING (uplinkTS)