-- Active: 1722832765629@@alpha.vectolabs.com@9998@smarttoilet-staging

-- get list of devivices based on device_pairs table that paired to a toilet id
SELECT
    DEVICES.DEVICE_NAME,
    DEVICES.DEVICE_ID,
    DEVICES.DEVICE_TOKEN,
    TOILET_INFOS.TOILET_NAME AS IDENTIFIER,
    TOILET_INFOS.TOILET_INFO_ID AS IDENTIFIER_ID,
    DEVICE_TYPES.DEVICE_TYPE_NAME AS NAMESPACE,
    DEVICE_TYPES.DEVICE_TYPE_ID AS NAMESPACE_ID,
    TOILET_TYPES.TOILET_TYPE_ID
FROM
    DEVICE_PAIRS
    JOIN DEVICES ON DEVICES.DEVICE_ID = DEVICE_PAIRS.DEVICE_ID
    JOIN DEVICE_TYPES ON DEVICE_TYPES.DEVICE_TYPE_ID = DEVICES.DEVICE_TYPE_ID
    JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID
    JOIN TOILET_TYPES ON TOILET_TYPES.TOILET_TYPE_ID = TOILET_INFOS.TOILET_TYPE_ID
WHERE
    DEVICE_PAIRS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984'

-- GET OVERVIEW CARD DATA
WITH DEVICE_LIST AS ( 
    SELECT DEVICES.DEVICE_NAME,DEVICES.DEVICE_ID,DEVICES.DEVICE_TOKEN, 
    TOILET_INFOS.TOILET_NAME AS IDENTIFIER,TOILET_INFOS.TOILET_INFO_ID AS IDENTIFIER_ID, 
    DEVICE_TYPES.DEVICE_TYPE_NAME AS NAMESPACE,DEVICE_TYPES.DEVICE_TYPE_ID AS NAMESPACE_ID,  
    TOILET_TYPES.TOILET_TYPE_ID  
    FROM DEVICE_PAIRS  
    JOIN DEVICES ON DEVICES.DEVICE_ID = DEVICE_PAIRS.DEVICE_ID  
    JOIN DEVICE_TYPES ON DEVICE_TYPES.DEVICE_TYPE_ID = DEVICES.DEVICE_TYPE_ID  
    JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID  
    JOIN TOILET_TYPES ON TOILET_TYPES.TOILET_TYPE_ID = TOILET_INFOS.TOILET_TYPE_ID  
    WHERE DEVICE_PAIRS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984')
SELECT LAST_UPDATE as timestamp,COALESCE(TTLTRAFFIC ,'0') AS TOTAL_COUNTER,  
LAST_COUNTER_TS AS LAST_COUNTER_CNT_TIMESTAMP, 
-- COALESCE(HOURS::text, '0') AS HOURS,  
IAQ AS ODOUR_LEVEL,TMP,LUX , 
FAN_STATUS,BLOWER_STATUS,OCCUPIED_STATUS,DISPLAY_STATUS,TOILET_NAME,TOILET_TYPE_ID,   
TOTAL_FRAGRANCE , TOTAL_AUTOCLEAN ,TOTAL_COMPLAINT  
FROM  
	(SELECT SUM(people_in) AS TTLTRAFFIC  
	FROM COUNTER_DATA  
	JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = COUNTER_DATA.DEVICE_TOKEN  
	-- WHERE DEVICE_LIST.NAMESPACE_ID = 2 AND DATE(TIMESTAMP) = DATE(NOW())) Q1  
	WHERE DEVICE_LIST.NAMESPACE_ID = 2 AND (TIMESTAMP) >= TO_TIMESTAMP('  2024-06-01   16:00:00','YYYY-MM-DD HH24:MI:SS')) Q1  
CROSS JOIN  
	(SELECT TIMESTAMP AS LAST_UPDATE,LUX,TEMPERATURE AS TMP,IAQ  
	FROM ENVIROMENT_DATA  
	JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = ENVIROMENT_DATA.DEVICE_TOKEN  
	WHERE DEVICE_LIST.NAMESPACE_ID = 3  
	ORDER BY TIMESTAMP DESC LIMIT 1) Q2  
CROSS JOIN  
	(SELECT COUNT(*) AS TOTAL_COMPLAINT  
	FROM FEEDBACK_PANEL_DATA  
	JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = FEEDBACK_PANEL_DATA.DEVICE_TOKEN  
	JOIN DEVICE_PAIRS ON DEVICE_PAIRS.DEVICE_ID = DEVICE_LIST.DEVICE_ID  
	JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID  
	-- WHERE DATE(TIMESTAMP) = DATE(NOW()) AND   
	WHERE (TIMESTAMP) >= TO_TIMESTAMP('  2024-06-01   16:00:00','YYYY-MM-DD HH24:MI:SS') AND   
	-- TOILET_INFOS.TOILET_TYPE_ID = '  strconv.Itoa(v.ToiletTypeID)  ') Q5  
	DEVICE_LIST.TOILET_TYPE_ID = FEEDBACK_PANEL_DATA.TOILET_TYPE_ID) Q5  
CROSS JOIN  
	(SELECT FAN_STATUS,BLOWER_STATUS,OCCUPIED_STATUS,DISPLAY_STATUS,TOILET_NAME,TOILET_TYPE_ID  
	FROM TOILET_INFOS  
	WHERE TOILET_INFOS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984') Q6  
CROSS JOIN  
	(SELECT COUNT(*) AS TOTAL_FRAGRANCE  
	FROM MISC_ACTION_DATA  
	JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = MISC_ACTION_DATA.DEVICE_TOKEN  
	WHERE MISC_ACTION_DATA.NAMESPACE = 'FRESHENER') Q7  
CROSS JOIN  
	(SELECT COUNT(CASE WHEN AUTO_CLEAN_STATE = '1' THEN 1 END) AS TOTAL_AUTOCLEAN  
	FROM CLEANER_REPORTS  
	WHERE CLEANER_REPORTS.TOILET_TYPE_ID = (SELECT TOILET_TYPE_ID FROM TOILET_INFOS  
	WHERE TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984')) Q8  
LEFT JOIN  
	(SELECT timestamp AS LAST_COUNTER_TS  
	FROM COUNTER_DATA  
	JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = COUNTER_DATA.DEVICE_TOKEN  
	WHERE DEVICE_LIST.NAMESPACE_ID = 2  
	ORDER BY timestamp desc LIMIT 1) Q9 ON TRUE
	
	

SELECT DEVICES.DEVICE_NAME,DEVICES.DEVICE_ID,DEVICES.DEVICE_TOKEN, 
TOILET_INFOS.TOILET_NAME AS IDENTIFIER,TOILET_INFOS.TOILET_INFO_ID AS IDENTIFIER_ID, 
DEVICE_TYPES.DEVICE_TYPE_NAME AS NAMESPACE,DEVICE_TYPES.DEVICE_TYPE_ID AS NAMESPACE_ID,  
TOILET_TYPES.TOILET_TYPE_ID  
FROM DEVICE_PAIRS  
JOIN DEVICES ON DEVICES.DEVICE_ID = DEVICE_PAIRS.DEVICE_ID  
JOIN DEVICE_TYPES ON DEVICE_TYPES.DEVICE_TYPE_ID = DEVICES.DEVICE_TYPE_ID  
JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID  
JOIN TOILET_TYPES ON TOILET_TYPES.TOILET_TYPE_ID = TOILET_INFOS.TOILET_TYPE_ID  
WHERE DEVICE_PAIRS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984'


-- running individual query

SELECT
    LAST_UPDATE as timestamp,
    COALESCE(TTLTRAFFIC, '0') AS TOTAL_COUNTER,
    LAST_COUNTER_TS AS LAST_COUNTER_CNT_TIMESTAMP,

-- q1 
SELECT SUM(people_in) AS TTLTRAFFIC  
	FROM COUNTER_DATA  
	JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = COUNTER_DATA.DEVICE_TOKEN  
	-- WHERE DEVICE_LIST.NAMESPACE_ID = 2 AND DATE(TIMESTAMP) = DATE(NOW())) Q1  
	WHERE DEVICE_LIST.NAMESPACE_ID = 2 AND (TIMESTAMP) >= TO_TIMESTAMP('  2024-06-01   16:00:00','YYYY-MM-DD HH24:MI:SS'


SELECT SUM(people_in) AS TTLTRAFFIC FROM COUNTER_DATA LIMIT 10

select sum(people_in) from counter_data limit 5

select * from counter_data limit 5

select sum(people_in) from counter_data limit 5

-- q2
WITH
    DEVICE_LIST AS (
        SELECT
            DEVICES.DEVICE_NAME,
            DEVICES.DEVICE_ID,
            DEVICES.DEVICE_TOKEN,
            TOILET_INFOS.TOILET_NAME AS IDENTIFIER,
            TOILET_INFOS.TOILET_INFO_ID AS IDENTIFIER_ID,
            DEVICE_TYPES.DEVICE_TYPE_NAME AS NAMESPACE,
            DEVICE_TYPES.DEVICE_TYPE_ID AS NAMESPACE_ID,
            TOILET_TYPES.TOILET_TYPE_ID
        FROM
            DEVICE_PAIRS
            JOIN DEVICES ON DEVICES.DEVICE_ID = DEVICE_PAIRS.DEVICE_ID
            JOIN DEVICE_TYPES ON DEVICE_TYPES.DEVICE_TYPE_ID = DEVICES.DEVICE_TYPE_ID
            JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID
            JOIN TOILET_TYPES ON TOILET_TYPES.TOILET_TYPE_ID = TOILET_INFOS.TOILET_TYPE_ID
        WHERE
            DEVICE_PAIRS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984'
    )
SELECT
	*,
    TIMESTAMP AS LAST_UPDATE,
    LUX,
    TEMPERATURE AS TMP,
    IAQ
FROM
    ENVIROMENT_DATA
    JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = ENVIROMENT_DATA.DEVICE_TOKEN
WHERE
    DEVICE_LIST.NAMESPACE_ID = 3
ORDER BY TIMESTAMP DESC
LIMIT 1


-- analysing overview card data
-- GET OVERVIEW CARD DATA
WITH DEVICE_LIST AS ( 
    SELECT DEVICES.DEVICE_NAME,DEVICES.DEVICE_ID,DEVICES.DEVICE_TOKEN, 
    TOILET_INFOS.TOILET_NAME AS IDENTIFIER,TOILET_INFOS.TOILET_INFO_ID AS IDENTIFIER_ID, 
    DEVICE_TYPES.DEVICE_TYPE_NAME AS NAMESPACE,DEVICE_TYPES.DEVICE_TYPE_ID AS NAMESPACE_ID,  
    TOILET_TYPES.TOILET_TYPE_ID  
    FROM DEVICE_PAIRS  
    JOIN DEVICES ON DEVICES.DEVICE_ID = DEVICE_PAIRS.DEVICE_ID  
    JOIN DEVICE_TYPES ON DEVICE_TYPES.DEVICE_TYPE_ID = DEVICES.DEVICE_TYPE_ID  
    JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID  
    JOIN TOILET_TYPES ON TOILET_TYPES.TOILET_TYPE_ID = TOILET_INFOS.TOILET_TYPE_ID  
    WHERE DEVICE_PAIRS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984')
SELECT LAST_UPDATE as timestamp,COALESCE(TTLTRAFFIC ,'0') AS TOTAL_COUNTER,  
LAST_COUNTER_TS AS LAST_COUNTER_CNT_TIMESTAMP, 
-- COALESCE(HOURS::text, '0') AS HOURS,  
IAQ AS ODOUR_LEVEL,TMP,LUX , 
FAN_STATUS,BLOWER_STATUS,OCCUPIED_STATUS,DISPLAY_STATUS,TOILET_NAME,TOILET_TYPE_ID,   
TOTAL_FRAGRANCE , TOTAL_AUTOCLEAN ,TOTAL_COMPLAINT ,Q10.AMMONIA_LVL
FROM  
	(SELECT SUM(people_in) AS TTLTRAFFIC  
	FROM COUNTER_DATA  
	JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = COUNTER_DATA.DEVICE_TOKEN  
	-- WHERE DEVICE_LIST.NAMESPACE_ID = 2 AND DATE(TIMESTAMP) = DATE(NOW())) Q1  
	WHERE DEVICE_LIST.NAMESPACE_ID = 2 AND (TIMESTAMP) >= TO_TIMESTAMP('  2024-06-01   16:00:00','YYYY-MM-DD HH24:MI:SS')) Q1  
CROSS JOIN  
	(SELECT TIMESTAMP AS LAST_UPDATE,LUX,TEMPERATURE AS TMP,IAQ  
	FROM ENVIROMENT_DATA  
	JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = ENVIROMENT_DATA.DEVICE_TOKEN  
	WHERE DEVICE_LIST.NAMESPACE_ID = 3  
	ORDER BY TIMESTAMP DESC LIMIT 1) Q2  
CROSS JOIN  
	(SELECT COUNT(*) AS TOTAL_COMPLAINT  
	FROM FEEDBACK_PANEL_DATA  
	JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = FEEDBACK_PANEL_DATA.DEVICE_TOKEN  
	JOIN DEVICE_PAIRS ON DEVICE_PAIRS.DEVICE_ID = DEVICE_LIST.DEVICE_ID  
	JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID  
	-- WHERE DATE(TIMESTAMP) = DATE(NOW()) AND   
	WHERE (TIMESTAMP) >= TO_TIMESTAMP('  2024-06-01   16:00:00','YYYY-MM-DD HH24:MI:SS') AND   
	-- TOILET_INFOS.TOILET_TYPE_ID = '  strconv.Itoa(v.ToiletTypeID)  ') Q5  
	DEVICE_LIST.TOILET_TYPE_ID = FEEDBACK_PANEL_DATA.TOILET_TYPE_ID) Q5  
CROSS JOIN  
	(SELECT FAN_STATUS,BLOWER_STATUS,OCCUPIED_STATUS,DISPLAY_STATUS,TOILET_NAME,TOILET_TYPE_ID  
	FROM TOILET_INFOS  
	WHERE TOILET_INFOS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984') Q6  
CROSS JOIN  
	(SELECT COUNT(*) AS TOTAL_FRAGRANCE  
	FROM MISC_ACTION_DATA  
	JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = MISC_ACTION_DATA.DEVICE_TOKEN  
	WHERE MISC_ACTION_DATA.NAMESPACE = 'FRESHENER') Q7  
CROSS JOIN  
	(SELECT COUNT(CASE WHEN AUTO_CLEAN_STATE = '1' THEN 1 END) AS TOTAL_AUTOCLEAN  
	FROM CLEANER_REPORTS  
	WHERE CLEANER_REPORTS.TOILET_TYPE_ID = (SELECT TOILET_TYPE_ID FROM TOILET_INFOS  
	WHERE TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984')) Q8  
LEFT JOIN  
	(SELECT timestamp AS LAST_COUNTER_TS  
	FROM COUNTER_DATA  
	JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = COUNTER_DATA.DEVICE_TOKEN  
	WHERE DEVICE_LIST.NAMESPACE_ID = 2  
	ORDER BY timestamp desc LIMIT 1) Q9 ON TRUE
CROSS JOIN
	(SELECT ammonia_data.device_token,avg(ammonia_level) as AMMONIA_LVL
	FROM ammonia_data
	JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = ammonia_data.DEVICE_TOKEN
	WHERE timestamp BETWEEN make_timestamp(2024, 7, 20, 18, 0, 0) AND make_timestamp(2024, 7, 20, 18, 30, 0)
	GROUP BY ammonia_data.device_token ) Q10

-- device list
SELECT DEVICES.DEVICE_NAME,
	DEVICES.DEVICE_ID,
	DEVICES.DEVICE_TOKEN,
	TOILET_INFOS.TOILET_NAME AS IDENTIFIER,
	TOILET_INFOS.TOILET_INFO_ID AS IDENTIFIER_ID,
	DEVICE_TYPES.DEVICE_TYPE_NAME AS NAMESPACE,
	DEVICE_TYPES.DEVICE_TYPE_ID AS NAMESPACE_ID,
	TOILET_TYPES.TOILET_TYPE_ID
FROM DEVICE_PAIRS
JOIN DEVICES ON DEVICES.DEVICE_ID = DEVICE_PAIRS.DEVICE_ID
JOIN DEVICE_TYPES ON DEVICE_TYPES.DEVICE_TYPE_ID = DEVICES.DEVICE_TYPE_ID
JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID
JOIN TOILET_TYPES ON TOILET_TYPES.TOILET_TYPE_ID = TOILET_INFOS.TOILET_TYPE_ID
WHERE DEVICE_PAIRS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984'

select * from toilet_infos

select tenant_name, * from toilet_infos
join tenants on toilet_infos.tenant_id = tenants.tenant_id

select * from ammonia_data

-- device belum pair
select * from devices

select d.device_name, dp.device_pair_id, d.device_token
from device_pairs as dp
join devices as d 
	on dp.device_id = d.device_id

-- pair pakai sql


SELECT device_token, avg(ammonia_level) as AMMONIA_LVL
FROM ammonia_data 
WHERE timestamp BETWEEN make_timestamp(2024, 7, 20, 18, 0, 0)
AND make_timestamp(2024, 7, 20, 18, 30, 0)
GROUP BY device_token

-- get current environmental
SELECT TIMESTAMP AS LAST_UPDATE,
	LUX,
	TEMPERATURE AS TMP,
	IAQ
FROM ENVIROMENT_DATA
JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = ENVIROMENT_DATA.DEVICE_TOKEN
WHERE DEVICE_LIST.NAMESPACE_ID = 3
ORDER BY TIMESTAMP DESC
LIMIT 1


-- device list join ammonia data
WITH DEVICE_LIST AS
				(SELECT DEVICES.DEVICE_NAME,
						DEVICES.DEVICE_ID,
						DEVICES.DEVICE_TOKEN,
						TOILET_INFOS.TOILET_NAME AS IDENTIFIER,
						TOILET_INFOS.TOILET_INFO_ID AS IDENTIFIER_ID,
						DEVICE_TYPES.DEVICE_TYPE_NAME AS NAMESPACE,
						DEVICE_TYPES.DEVICE_TYPE_ID AS NAMESPACE_ID,
						TOILET_TYPES.TOILET_TYPE_ID
					FROM DEVICE_PAIRS
					JOIN DEVICES ON DEVICES.DEVICE_ID = DEVICE_PAIRS.DEVICE_ID
					JOIN DEVICE_TYPES ON DEVICE_TYPES.DEVICE_TYPE_ID = DEVICES.DEVICE_TYPE_ID
					JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID
					JOIN TOILET_TYPES ON TOILET_TYPES.TOILET_TYPE_ID = TOILET_INFOS.TOILET_TYPE_ID
					WHERE DEVICE_PAIRS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984')
SELECT DEVICE_NAME, DEVICE_TOKEN,
	Q1.AMMONIA_LVL
FROM (SELECT ammonia_data.device_token,
	avg(ammonia_level) as AMMONIA_LVL,
	DEVICE_LIST.DEVICE_NAME
	FROM ammonia_data
	JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = ammonia_data.DEVICE_TOKEN
	WHERE timestamp BETWEEN make_timestamp(2024, 7, 20, 18, 0, 0) AND make_timestamp(2024, 7, 20, 18, 30, 0)
	GROUP BY ammonia_data.device_token, DEVICE_LIST.DEVICE_NAME) Q1

--with device list join ammonia data
-- zoo teruntum kuantan male: 0a38e4d1-f9b9-4cb2-648f-20e0ac269984
WITH DEVICE_LIST AS
	(SELECT DEVICES.DEVICE_NAME,
			DEVICES.DEVICE_ID,
			DEVICES.DEVICE_TOKEN,
			TOILET_INFOS.TOILET_NAME AS IDENTIFIER,
			TOILET_INFOS.TOILET_INFO_ID AS IDENTIFIER_ID,
			DEVICE_TYPES.DEVICE_TYPE_NAME AS NAMESPACE,
			DEVICE_TYPES.DEVICE_TYPE_ID AS NAMESPACE_ID,
			TOILET_TYPES.TOILET_TYPE_ID
		FROM DEVICE_PAIRS
		JOIN DEVICES ON DEVICES.DEVICE_ID = DEVICE_PAIRS.DEVICE_ID
		JOIN DEVICE_TYPES ON DEVICE_TYPES.DEVICE_TYPE_ID = DEVICES.DEVICE_TYPE_ID
		JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID
		JOIN TOILET_TYPES ON TOILET_TYPES.TOILET_TYPE_ID = TOILET_INFOS.TOILET_TYPE_ID
		WHERE DEVICE_PAIRS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984')
SELECT ammonia_data.device_token,
	avg(ammonia_level) as AMMONIA_LVL
FROM ammonia_data
JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = ammonia_data.DEVICE_TOKEN
WHERE timestamp BETWEEN make_timestamp(2024, 7, 2, 18, 0, 0) AND make_timestamp(2024, 7, 25, 18, 30, 0)
GROUP BY ammonia_data.device_token


-- select drop
select * from getoverviewdata();

drop function getoverviewdata();

create or replace function getoverviewdata() returns table (
	ts TIMESTAMPTZ,
	TOTAL_COUNTER INTEGER,
	LAST_COUNTER_CNT_TIMESTAMP TIMESTAMPTZ, -- COALESCE(HOURS::text, '0') AS HOURS,
	ODOUR_LEVEL INTEGER,
	TMP INTEGER,
	LUX INTEGER,
	FAN_STATUS INTEGER,
	BLOWER_STATUS INTEGER,
	OCCUPIED_STATUS INTEGER,
	DISPLAY_STATUS INTEGER,
	TOILET_NAME INTEGER,
	TOILET_TYPE_ID INTEGER,
	TOTAL_FRAGRANCE INTEGER,
	TOTAL_AUTOCLEAN INTEGER,
	TOTAL_COMPLAINT INTEGER
) as $$
BEGIN
return query
WITH DEVICE_LIST AS
				(SELECT DEVICES.DEVICE_NAME,
						DEVICES.DEVICE_ID,
						DEVICES.DEVICE_TOKEN,
						TOILET_INFOS.TOILET_NAME AS IDENTIFIER,
						TOILET_INFOS.TOILET_INFO_ID AS IDENTIFIER_ID,
						DEVICE_TYPES.DEVICE_TYPE_NAME AS NAMESPACE,
						DEVICE_TYPES.DEVICE_TYPE_ID AS NAMESPACE_ID,
						TOILET_TYPES.TOILET_TYPE_ID
					FROM DEVICE_PAIRS
					JOIN DEVICES ON DEVICES.DEVICE_ID = DEVICE_PAIRS.DEVICE_ID
					JOIN DEVICE_TYPES ON DEVICE_TYPES.DEVICE_TYPE_ID = DEVICES.DEVICE_TYPE_ID
					JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID
					JOIN TOILET_TYPES ON TOILET_TYPES.TOILET_TYPE_ID = TOILET_INFOS.TOILET_TYPE_ID
					WHERE DEVICE_PAIRS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984')
SELECT LAST_UPDATE as timestamp,
	COALESCE(TTLTRAFFIC,'0') AS TOTAL_COUNTER,
	LAST_COUNTER_TS AS LAST_COUNTER_CNT_TIMESTAMP, -- COALESCE(HOURS::text, '0') AS HOURS,
	IAQ AS ODOUR_LEVEL,
	TMP,
	Q2.LUX,
	FAN_STATUS,
	BLOWER_STATUS,
	OCCUPIED_STATUS,
	DISPLAY_STATUS,
	TOILET_NAME,
	TOILET_TYPE_ID,
	TOTAL_FRAGRANCE,
	TOTAL_AUTOCLEAN,
	TOTAL_COMPLAINT
FROM
				(SELECT SUM(people_in) AS TTLTRAFFIC
					FROM COUNTER_DATA
					JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = COUNTER_DATA.DEVICE_TOKEN -- WHERE DEVICE_LIST.NAMESPACE_ID = 2 AND DATE(TIMESTAMP) = DATE(NOW())) Q1

					WHERE DEVICE_LIST.NAMESPACE_ID = 2
									AND (TIMESTAMP) >= TO_TIMESTAMP('  2024-06-01   16:00:00','YYYY-MM-DD HH24:MI:SS')) Q1
CROSS JOIN
				(SELECT TIMESTAMP AS LAST_UPDATE,
						LUX,
						TEMPERATURE AS TMP,
						IAQ
					FROM ENVIROMENT_DATA
					JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = ENVIROMENT_DATA.DEVICE_TOKEN
					WHERE DEVICE_LIST.NAMESPACE_ID = 3
					ORDER BY TIMESTAMP DESC
					LIMIT 1) Q2
CROSS JOIN
				(SELECT COUNT(*) AS TOTAL_COMPLAINT
					FROM FEEDBACK_PANEL_DATA
					JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = FEEDBACK_PANEL_DATA.DEVICE_TOKEN
					JOIN DEVICE_PAIRS ON DEVICE_PAIRS.DEVICE_ID = DEVICE_LIST.DEVICE_ID
					JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID -- WHERE DATE(TIMESTAMP) = DATE(NOW()) AND

					WHERE (TIMESTAMP) >= TO_TIMESTAMP('  2024-06-01   16:00:00','YYYY-MM-DD HH24:MI:SS')
									AND -- TOILET_INFOS.TOILET_TYPE_ID = '  strconv.Itoa(v.ToiletTypeID)  ') Q5
 DEVICE_LIST.TOILET_TYPE_ID = FEEDBACK_PANEL_DATA.TOILET_TYPE_ID) Q5
CROSS JOIN
				(SELECT FAN_STATUS,
						BLOWER_STATUS,
						OCCUPIED_STATUS,
						DISPLAY_STATUS,
						TOILET_NAME,
						TOILET_TYPE_ID
					FROM TOILET_INFOS
					WHERE TOILET_INFOS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984') Q6
CROSS JOIN
				(SELECT COUNT(*) AS TOTAL_FRAGRANCE
					FROM MISC_ACTION_DATA
					JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = MISC_ACTION_DATA.DEVICE_TOKEN
					WHERE MISC_ACTION_DATA.NAMESPACE = 'FRESHENER') Q7
CROSS JOIN
				(SELECT COUNT(CASE
																						WHEN AUTO_CLEAN_STATE = '1' THEN 1
																		END) AS TOTAL_AUTOCLEAN
					FROM CLEANER_REPORTS
					WHERE CLEANER_REPORTS.TOILET_TYPE_ID =
													(SELECT TOILET_TYPE_ID
														FROM TOILET_INFOS
														WHERE TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984')) Q8
LEFT JOIN
				(SELECT timestamp AS LAST_COUNTER_TS
					FROM COUNTER_DATA
					JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = COUNTER_DATA.DEVICE_TOKEN
					WHERE DEVICE_LIST.NAMESPACE_ID = 2
					ORDER BY timestamp desc
					LIMIT 1) Q9 ON TRUE;
END;
$$ LANGUAGE plpgsql;


--try fix
CREATE OR REPLACE FUNCTION getoverviewdata()
RETURNS TABLE (
    ts TIMESTAMPTZ,
    TOTAL_COUNTER INTEGER,
    LAST_COUNTER_CNT_TIMESTAMP TIMESTAMPTZ,
    ODOUR_LEVEL INTEGER,
    TMP INTEGER,
    LUX INTEGER,
    FAN_STATUS INTEGER,
    BLOWER_STATUS INTEGER,
    OCCUPIED_STATUS INTEGER,
    DISPLAY_STATUS INTEGER,
    TOILET_NAME INTEGER,
    TOILET_TYPE_ID INTEGER,
    TOTAL_FRAGRANCE INTEGER,
    TOTAL_AUTOCLEAN INTEGER,
    TOTAL_COMPLAINT INTEGER
) AS $$
BEGIN
    RETURN QUERY
    WITH DEVICE_LIST AS (
        SELECT 
            DEVICES.DEVICE_NAME,
            DEVICES.DEVICE_ID,
            DEVICES.DEVICE_TOKEN,
            TOILET_INFOS.TOILET_NAME AS IDENTIFIER,
            TOILET_INFOS.TOILET_INFO_ID AS IDENTIFIER_ID,
            DEVICE_TYPES.DEVICE_TYPE_NAME AS NAMESPACE,
            DEVICE_TYPES.DEVICE_TYPE_ID AS NAMESPACE_ID,
            TOILET_TYPES.TOILET_TYPE_ID
        FROM DEVICE_PAIRS
        JOIN DEVICES ON DEVICES.DEVICE_ID = DEVICE_PAIRS.DEVICE_ID
        JOIN DEVICE_TYPES ON DEVICE_TYPES.DEVICE_TYPE_ID = DEVICES.DEVICE_TYPE_ID
        JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID
        JOIN TOILET_TYPES ON TOILET_TYPES.TOILET_TYPE_ID = TOILET_INFOS.TOILET_TYPE_ID
        WHERE DEVICE_PAIRS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984'
    ),
    Q1 AS (
        SELECT 
            SUM(people_in) AS TTLTRAFFIC
        FROM COUNTER_DATA
        JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = COUNTER_DATA.DEVICE_TOKEN
        WHERE DEVICE_LIST.NAMESPACE_ID = 2
          AND TIMESTAMP >= TO_TIMESTAMP('2024-06-01 16:00:00','YYYY-MM-DD HH24:MI:SS')
    ),
    Q2 AS (
        SELECT 
            TIMESTAMP AS LAST_UPDATE,
            LUX,
            TEMPERATURE AS TMP,
            IAQ
        FROM ENVIROMENT_DATA
        JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = ENVIROMENT_DATA.DEVICE_TOKEN
        WHERE DEVICE_LIST.NAMESPACE_ID = 3
        ORDER BY TIMESTAMP DESC
        LIMIT 1
    ),
    Q5 AS (
        SELECT 
            COUNT(*) AS TOTAL_COMPLAINT
        FROM FEEDBACK_PANEL_DATA
        JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = FEEDBACK_PANEL_DATA.DEVICE_TOKEN
        JOIN DEVICE_PAIRS ON DEVICE_PAIRS.DEVICE_ID = DEVICE_LIST.DEVICE_ID
        JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID
        WHERE TIMESTAMP >= TO_TIMESTAMP('2024-06-01 16:00:00','YYYY-MM-DD HH24:MI:SS')
          AND DEVICE_LIST.TOILET_TYPE_ID = FEEDBACK_PANEL_DATA.TOILET_TYPE_ID
    ),
    Q6 AS (
        SELECT 
            FAN_STATUS,
            BLOWER_STATUS,
            OCCUPIED_STATUS,
            DISPLAY_STATUS,
            TOILET_NAME,
            TOILET_TYPE_ID
        FROM TOILET_INFOS
        WHERE TOILET_INFOS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984'
    ),
    Q7 AS (
        SELECT 
            COUNT(*) AS TOTAL_FRAGRANCE
        FROM MISC_ACTION_DATA
        JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = MISC_ACTION_DATA.DEVICE_TOKEN
        WHERE MISC_ACTION_DATA.NAMESPACE = 'FRESHENER'
    ),
    Q8 AS (
        SELECT 
            COUNT(CASE WHEN AUTO_CLEAN_STATE = '1' THEN 1 END) AS TOTAL_AUTOCLEAN
        FROM CLEANER_REPORTS
        WHERE CLEANER_REPORTS.TOILET_TYPE_ID = (
            SELECT TOILET_TYPE_ID
            FROM TOILET_INFOS
            WHERE TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984'
        )
    ),
    Q9 AS (
        SELECT 
            TIMESTAMP AS LAST_COUNTER_TS
        FROM COUNTER_DATA
        JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = COUNTER_DATA.DEVICE_TOKEN
        WHERE DEVICE_LIST.NAMESPACE_ID = 2
        ORDER BY TIMESTAMP DESC
        LIMIT 1
    )
    SELECT 
        Q2.LAST_UPDATE AS ts,
        COALESCE(Q1.TTLTRAFFIC, 0) AS TOTAL_COUNTER,
        Q9.LAST_COUNTER_TS AS LAST_COUNTER_CNT_TIMESTAMP,
        Q2.IAQ AS ODOUR_LEVEL,
        Q2.TMP,
        Q2.LUX,
        Q6.FAN_STATUS,
        Q6.BLOWER_STATUS,
        Q6.OCCUPIED_STATUS,
        Q6.DISPLAY_STATUS,
        Q6.TOILET_NAME,
        Q6.TOILET_TYPE_ID,
        Q7.TOTAL_FRAGRANCE,
        Q8.TOTAL_AUTOCLEAN,
        Q5.TOTAL_COMPLAINT
    FROM Q1
    CROSS JOIN Q2
    CROSS JOIN Q5
    CROSS JOIN Q6
    CROSS JOIN Q7
    CROSS JOIN Q8
    LEFT JOIN Q9 ON TRUE;
END;
$$ LANGUAGE plpgsql;


--try fix 2
CREATE OR REPLACE FUNCTION getoverviewdata()
RETURNS TABLE (
    ts TIMESTAMPTZ,
    total_counter INTEGER,
    last_counter_cnt_timestamp TIMESTAMPTZ,
    odour_level INTEGER,
    tmp INTEGER,
    lux INTEGER,
    fan_status INTEGER,
    blower_status INTEGER,
    occupied_status INTEGER,
    display_status INTEGER,
    toilet_name INTEGER,
    toilet_type_id INTEGER,
    total_fragrance INTEGER,
    total_autoclean INTEGER,
    total_complaint INTEGER
) AS $$
BEGIN
    RETURN QUERY
    WITH DEVICE_LIST AS (
        SELECT 
            DEVICES.DEVICE_NAME,
            DEVICES.DEVICE_ID,
            DEVICES.DEVICE_TOKEN,
            TOILET_INFOS.TOILET_NAME AS IDENTIFIER,
            TOILET_INFOS.TOILET_INFO_ID AS IDENTIFIER_ID,
            DEVICE_TYPES.DEVICE_TYPE_NAME AS NAMESPACE,
            DEVICE_TYPES.DEVICE_TYPE_ID AS NAMESPACE_ID,
            TOILET_TYPES.TOILET_TYPE_ID
        FROM DEVICE_PAIRS
        JOIN DEVICES ON DEVICES.DEVICE_ID = DEVICE_PAIRS.DEVICE_ID
        JOIN DEVICE_TYPES ON DEVICE_TYPES.DEVICE_TYPE_ID = DEVICES.DEVICE_TYPE_ID
        JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID
        JOIN TOILET_TYPES ON TOILET_TYPES.TOILET_TYPE_ID = TOILET_INFOS.TOILET_TYPE_ID
        WHERE DEVICE_PAIRS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984'
    ),
    Q1 AS (
        SELECT 
            SUM(people_in) AS ttltraffic
        FROM COUNTER_DATA
        JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = COUNTER_DATA.DEVICE_TOKEN
        WHERE DEVICE_LIST.NAMESPACE_ID = 2
          AND TIMESTAMP >= TO_TIMESTAMP('2024-06-01 16:00:00','YYYY-MM-DD HH24:MI:SS')
    ),
    Q2 AS (
        SELECT 
            TIMESTAMP AS last_update,
            LUX,
            TEMPERATURE AS tmp,
            IAQ
        FROM ENVIROMENT_DATA
        JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = ENVIROMENT_DATA.DEVICE_TOKEN
        WHERE DEVICE_LIST.NAMESPACE_ID = 3
        ORDER BY TIMESTAMP DESC
        LIMIT 1
    ),
    Q5 AS (
        SELECT 
            COUNT(*) AS total_complaint
        FROM FEEDBACK_PANEL_DATA
        JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = FEEDBACK_PANEL_DATA.DEVICE_TOKEN
        JOIN DEVICE_PAIRS ON DEVICE_PAIRS.DEVICE_ID = DEVICE_LIST.DEVICE_ID
        JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID
        WHERE TIMESTAMP >= TO_TIMESTAMP('2024-06-01 16:00:00','YYYY-MM-DD HH24:MI:SS')
          AND DEVICE_LIST.TOILET_TYPE_ID = FEEDBACK_PANEL_DATA.TOILET_TYPE_ID
    ),
    Q6 AS (
        SELECT 
            FAN_STATUS,
            BLOWER_STATUS,
            OCCUPIED_STATUS,
            DISPLAY_STATUS,
            TOILET_NAME,
            TOILET_TYPE_ID
        FROM TOILET_INFOS
        WHERE TOILET_INFOS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984'
    ),
    Q7 AS (
        SELECT 
            COUNT(*) AS total_fragrance
        FROM MISC_ACTION_DATA
        JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = MISC_ACTION_DATA.DEVICE_TOKEN
        WHERE MISC_ACTION_DATA.NAMESPACE = 'FRESHENER'
    ),
    Q8 AS (
        SELECT 
            COUNT(CASE WHEN AUTO_CLEAN_STATE = '1' THEN 1 END) AS total_autoclean
        FROM CLEANER_REPORTS
        WHERE CLEANER_REPORTS.TOILET_TYPE_ID = (
            SELECT TOILET_TYPE_ID
            FROM TOILET_INFOS
            WHERE TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984'
        )
    ),
    Q9 AS (
        SELECT 
            TIMESTAMP AS last_counter_ts
        FROM COUNTER_DATA
        JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = COUNTER_DATA.DEVICE_TOKEN
        WHERE DEVICE_LIST.NAMESPACE_ID = 2
        ORDER BY TIMESTAMP DESC
        LIMIT 1
    )
    SELECT 
        Q2.last_update AS ts,
        COALESCE(Q1.ttltraffic, 0) AS total_counter,
        Q9.last_counter_ts AS last_counter_cnt_timestamp,
        Q2.IAQ AS odour_level,
        Q2.tmp,
        Q2.LUX AS lux,
        Q6.FAN_STATUS AS fan_status,
        Q6.BLOWER_STATUS AS blower_status,
        Q6.OCCUPIED_STATUS AS occupied_status,
        Q6.DISPLAY_STATUS AS display_status,
        Q6.TOILET_NAME AS toilet_name,
        Q6.TOILET_TYPE_ID AS toilet_type_id,
        Q7.total_fragrance,
        Q8.total_autoclean,
        Q5.total_complaint
    FROM Q1
    CROSS JOIN Q2
    CROSS JOIN Q5
    CROSS JOIN Q6
    CROSS JOIN Q7
    CROSS JOIN Q8
    LEFT JOIN Q9 ON TRUE;
END;
$$ LANGUAGE plpgsql;


-- try fix 3

CREATE OR REPLACE FUNCTION getoverviewdata() RETURNS TABLE ( 
    ts TIMESTAMPTZ, 
    total_counter INTEGER, 
    last_counter_cnt_timestamp TIMESTAMPTZ,
	odour_level INTEGER, 
    tmp INTEGER, 
    lux INTEGER, 
    fan_status INTEGER, 
    blower_status INTEGER, 
    occupied_status INTEGER, 
    display_status INTEGER, 
    toilet_name TEXT, 
    toilet_type_id INTEGER,
    total_fragrance INTEGER, 
    total_autoclean INTEGER, 
    total_complaint INTEGER
    ) AS $$
BEGIN
    RETURN QUERY
    WITH DEVICE_LIST AS (
        SELECT
            DEVICES.DEVICE_NAME,
            DEVICES.DEVICE_ID,
            DEVICES.DEVICE_TOKEN,
            TOILET_INFOS.TOILET_NAME AS IDENTIFIER,
            TOILET_INFOS.TOILET_INFO_ID AS IDENTIFIER_ID,
            DEVICE_TYPES.DEVICE_TYPE_NAME AS NAMESPACE,
            DEVICE_TYPES.DEVICE_TYPE_ID AS NAMESPACE_ID,
            TOILET_TYPES.TOILET_TYPE_ID
        FROM DEVICE_PAIRS
        JOIN DEVICES ON DEVICES.DEVICE_ID = DEVICE_PAIRS.DEVICE_ID
        JOIN DEVICE_TYPES ON DEVICE_TYPES.DEVICE_TYPE_ID = DEVICES.DEVICE_TYPE_ID
        JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID
        JOIN TOILET_TYPES ON TOILET_TYPES.TOILET_TYPE_ID = TOILET_INFOS.TOILET_TYPE_ID
        WHERE DEVICE_PAIRS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984'
    ),
    Q1 AS (
        SELECT
            SUM(people_in) AS ttltraffic
        FROM COUNTER_DATA
        JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = COUNTER_DATA.DEVICE_TOKEN
        WHERE DEVICE_LIST.NAMESPACE_ID = 2
          AND TIMESTAMP >= TO_TIMESTAMP('2024-06-01 16:00:00','YYYY-MM-DD HH24:MI:SS')
    ),
    Q2 AS (
        SELECT
            TIMESTAMP AS last_update,
            ENVIROMENT_DATA.LUX AS lux,
            TEMPERATURE AS tmp,
            IAQ AS odour_level
        FROM ENVIROMENT_DATA
        JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = ENVIROMENT_DATA.DEVICE_TOKEN
        WHERE DEVICE_LIST.NAMESPACE_ID = 3
        ORDER BY TIMESTAMP DESC
        LIMIT 1
    ),
    Q5 AS (
        SELECT
            COUNT(*) AS total_complaint
        FROM FEEDBACK_PANEL_DATA
        JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = FEEDBACK_PANEL_DATA.DEVICE_TOKEN
        JOIN DEVICE_PAIRS ON DEVICE_PAIRS.DEVICE_ID = DEVICE_LIST.DEVICE_ID
        JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID
        WHERE TIMESTAMP >= TO_TIMESTAMP('2024-06-01 16:00:00','YYYY-MM-DD HH24:MI:SS')
          AND DEVICE_LIST.TOILET_TYPE_ID = FEEDBACK_PANEL_DATA.TOILET_TYPE_ID
    ),
    Q6 AS (
        SELECT
            TOILET_INFOS.FAN_STATUS AS fan_status,
            TOILET_INFOS.BLOWER_STATUS AS blower_status,
            TOILET_INFOS.OCCUPIED_STATUS AS occupied_status,
            TOILET_INFOS.DISPLAY_STATUS AS display_status,
            TOILET_INFOS.TOILET_NAME AS toilet_name,
            TOILET_INFOS.TOILET_TYPE_ID AS toilet_type_id
        FROM TOILET_INFOS
        WHERE TOILET_INFOS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984'
    ),
    Q7 AS (
        SELECT
            COUNT(*) AS total_fragrance
        FROM MISC_ACTION_DATA
        JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = MISC_ACTION_DATA.DEVICE_TOKEN
        WHERE MISC_ACTION_DATA.NAMESPACE = 'FRESHENER'
    ),
    Q8 AS (
        SELECT
            COUNT(CASE WHEN AUTO_CLEAN_STATE = '1' THEN 1 END) AS total_autoclean
        FROM CLEANER_REPORTS
        WHERE CLEANER_REPORTS.TOILET_TYPE_ID = (
            SELECT TOILET_INFOS.TOILET_TYPE_ID
            FROM TOILET_INFOS
            WHERE TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984'
        )
    ),
    Q9 AS (
        SELECT
            TIMESTAMP AS last_counter_ts
        FROM COUNTER_DATA
        JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = COUNTER_DATA.DEVICE_TOKEN
        WHERE DEVICE_LIST.NAMESPACE_ID = 2
        ORDER BY TIMESTAMP DESC
        LIMIT 1
    )
    SELECT
        Q2.last_update::TIMESTAMPTZ AS ts,
        COALESCE(Q1.ttltraffic, 0)::INTEGER AS total_counter,
        Q9.last_counter_ts::TIMESTAMPTZ AS last_counter_cnt_timestamp,
        Q2.odour_level::INTEGER AS odour_level,
        Q2.tmp::INTEGER AS tmp,
        Q2.lux::INTEGER AS lux,
        Q6.fan_status::INTEGER AS fan_status,
        Q6.blower_status::INTEGER AS blower_status,
        Q6.occupied_status::INTEGER AS occupied_status,
        Q6.display_status::INTEGER AS display_status,
        Q6.toilet_name::TEXT AS toilet_name,
        Q6.toilet_type_id::INTEGER AS toilet_type_id,
        Q7.total_fragrance::INTEGER AS total_fragrance,
        Q8.total_autoclean::INTEGER AS total_autoclean,
        Q5.total_complaint::INTEGER AS total_complaint 
    FROM Q1
    CROSS JOIN Q2
    CROSS JOIN Q5
    CROSS JOIN Q6
    CROSS JOIN Q7
    CROSS JOIN Q8
    LEFT JOIN Q9 ON TRUE;
END;
$$ LANGUAGE plpgsql;


select * from getoverviewdata()

drop function getoverviewdata()

-- fix 4
-- CREATE OR REPLACE FUNCTION getoverviewdata() RETURNS TABLE (AQ integer) AS $$
-- BEGIN
--     RETURN QUERY
--     WITH DEVICE_LIST AS (
--         SELECT
--             DEVICES.DEVICE_NAME,
--             DEVICES.DEVICE_ID,
--             DEVICES.DEVICE_TOKEN,
--             TOILET_INFOS.TOILET_NAME AS IDENTIFIER,
--             TOILET_INFOS.TOILET_INFO_ID AS IDENTIFIER_ID,
--             DEVICE_TYPES.DEVICE_TYPE_NAME AS NAMESPACE,
--             DEVICE_TYPES.DEVICE_TYPE_ID AS NAMESPACE_ID,
--             TOILET_TYPES.TOILET_TYPE_ID
--         FROM DEVICE_PAIRS
--         JOIN DEVICES ON DEVICES.DEVICE_ID = DEVICE_PAIRS.DEVICE_ID
--         JOIN DEVICE_TYPES ON DEVICE_TYPES.DEVICE_TYPE_ID = DEVICES.DEVICE_TYPE_ID
--         JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID
--         JOIN TOILET_TYPES ON TOILET_TYPES.TOILET_TYPE_ID = TOILET_INFOS.TOILET_TYPE_ID
--         WHERE DEVICE_PAIRS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984'
--     ),
--     Q1 AS (
--         SELECT
--             SUM(people_in) AS ttltraffic
--         FROM COUNTER_DATA
--         JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = COUNTER_DATA.DEVICE_TOKEN
--         WHERE DEVICE_LIST.NAMESPACE_ID = 2
--           AND TIMESTAMP >= TO_TIMESTAMP('2024-06-01 16:00:00','YYYY-MM-DD HH24:MI:SS')
--     ),
--     Q2 AS (
--         SELECT
--             TIMESTAMP AS last_update,
--             LUX AS lux,
--             TEMPERATURE AS tmp,
--             IAQ AS odour_level
--         FROM ENVIROMENT_DATA
--         JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = ENVIROMENT_DATA.DEVICE_TOKEN
--         WHERE DEVICE_LIST.NAMESPACE_ID = 3
--         ORDER BY TIMESTAMP DESC
--         LIMIT 1
--     ),
--     Q5 AS (
--         SELECT
--             COUNT(*) AS total_complaint
--         FROM FEEDBACK_PANEL_DATA
--         JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = FEEDBACK_PANEL_DATA.DEVICE_TOKEN
--         JOIN DEVICE_PAIRS ON DEVICE_PAIRS.DEVICE_ID = DEVICE_LIST.DEVICE_ID
--         JOIN TOILET_INFOS ON TOILET_INFOS.TOILET_INFO_ID = DEVICE_PAIRS.TOILET_INFO_ID
--         WHERE TIMESTAMP >= TO_TIMESTAMP('2024-06-01 16:00:00','YYYY-MM-DD HH24:MI:SS')
--           AND DEVICE_LIST.TOILET_TYPE_ID = FEEDBACK_PANEL_DATA.TOILET_TYPE_ID
--     ),
--     Q6 AS (
--         SELECT
--             FAN_STATUS AS fan_status,
--             TOILET_INFOS.BLOWER_STATUS AS blower_status,
--             OCCUPIED_STATUS AS occupied_status,
--             DISPLAY_STATUS AS display_status,
--             TOILET_NAME AS toilet_name,
--             TOILET_TYPE_ID AS toilet_type_id
--         FROM TOILET_INFOS
--         WHERE TOILET_INFOS.TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984'
--     ),
--     Q7 AS (
--         SELECT
--             COUNT(*) AS total_fragrance
--         FROM MISC_ACTION_DATA
--         JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = MISC_ACTION_DATA.DEVICE_TOKEN
--         WHERE MISC_ACTION_DATA.NAMESPACE = 'FRESHENER'
--     ),
--     Q8 AS (
--         SELECT
--             COUNT(CASE WHEN AUTO_CLEAN_STATE = '1' THEN 1 END) AS total_autoclean
--         FROM CLEANER_REPORTS
--         WHERE CLEANER_REPORTS.TOILET_TYPE_ID = (
--             SELECT TOILET_TYPE_ID
--             FROM TOILET_INFOS
--             WHERE TOILET_INFO_ID = '0a38e4d1-f9b9-4cb2-648f-20e0ac269984'
--         )
--     ),
--     Q9 AS (
--         SELECT
--             TIMESTAMP AS last_counter_ts
--         FROM COUNTER_DATA
--         JOIN DEVICE_LIST ON DEVICE_LIST.DEVICE_TOKEN = COUNTER_DATA.DEVICE_TOKEN
--         WHERE DEVICE_LIST.NAMESPACE_ID = 2
--         ORDER BY TIMESTAMP DESC
--         LIMIT 1
--     )
--     select lux from (SELECT
--         Q2.last_update AS ts,
--         COALESCE(Q1.ttltraffic, 0) AS total_counter,
--         Q9.last_counter_ts AS last_counter_cnt_timestamp,
--         Q2.odour_level AS odour_level,
--         Q2.tmp AS tmp,
--         Q2.lux AS lux,
--         Q6.fan_status AS fan_status,
--         Q6.blower_status AS blower_status,
--         Q6.occupied_status AS occupied_status,
--         Q6.display_status AS display_status,
--         Q6.toilet_name AS toilet_name,
--         Q6.toilet_type_id AS toilet_type_id,
--         Q7.total_fragrance AS total_fragrance,
--         Q8.total_autoclean AS total_autoclean,
--         Q5.total_complaint AS total_complaint
--     FROM Q1
--     CROSS JOIN Q2
--     CROSS JOIN Q5
--     CROSS JOIN Q6
--     CROSS JOIN Q7
--     CROSS JOIN Q8
--     LEFT JOIN Q9 ON TRUE) AS AQ;
-- END;
-- $$ LANGUAGE plpgsql;


-- fix this subquery alias
WITH
    DEVICE_LIST AS (
        select dp.device_pair_id, d.device_name, d.device_token, d.device_id
        from
            device_pairs as dp
            join toilet_infos as ti on dp.toilet_info_id = ti.toilet_info_id
            join devices as d on dp.device_id = d.device_id
        where
            dp.toilet_info_id = '5654c008-dbcc-4656-5601-0a0c50652213'
            and d.device_type_id = 12
    )
select od.occupied as occupancy, right(Q2.alias, 2) as cubical_name, Q1.cubical_counter, dl.device_name
from
    occupancy_data od
    join device_list dl on dl.device_token = od.device_token
    left join (
        select COALESCE(
                sum(
                    CASE
                        WHEN occupied = TRUE
                        AND prev_occupied = FALSE THEN 1
                        ELSE 0
                    END
                ), 0
            ) as cubical_counter, device_token
        from (
                select *, lag(occupied, 1) over (
                        order by id
                    ) prev_occupied
                from occupancy_data
            ) SQ1
        where
            timestamp BETWEEN to_timestamp (
                '2024-08-01 00:00:00',
                'YYYY-MM-DD HH24:MI:SS'
            ) AND to_timestamp  (
                '2024-08-01 23:59:59',
                'YYYY-MM-DD HH24:MI:SS'
            )
        group by
            device_token
    ) Q1 on Q1.device_token = dl.device_token
    left join (
        select distinct
            device_id,
            alias
        from device_aliases
    ) Q2 using (device_id)
order by timestamp desc
limit 4


